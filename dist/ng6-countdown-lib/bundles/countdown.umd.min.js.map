{"version":3,"sources":["ng://countdown/lib/pipes/number-transform/number-transform.pipe.ts","ng://countdown/lib/countdown.component.ts","ng://countdown/lib/countdow.module.ts"],"names":["NumberTransformPipe","prototype","transform","value","Pipe","args","name","CountDownComponent","EventEmitter","moment_","ngOnInit","_this","this","finishDate","moment","date","setInterval","today","daysRemaining","diff","hoursRemaining","minutesRemaining","secondsRemaining","daysChanged","emit","hoursChanged","minutesChanged","secondsChanged","isFinishDate","isSameOrBefore","Component","selector","template","Input","Output","CountDownModule","NgModule","declarations","imports","CommonModule","exports"],"mappings":"+VAAA,IAAAA,EAAA,gCAMEA,EAAAC,UAAAC,UAAA,SAAUC,GACR,OAAIA,EACEA,EAAQ,GACH,IAAIA,EAEN,GAAGA,EAEH,0BAXZC,EAAAA,KAAIC,KAAA,CAAC,CACJC,KAAM,2BAHR,GCAAC,EAAA,mCAWmB,uCACG,sBACC,yBACE,2BACA,iCACK,2BACG,8BACN,yBACqB,IAAIC,EAAAA,+BACH,IAAIA,EAAAA,iCACF,IAAIA,EAAAA,iCACJ,IAAIA,EAAAA,yBAO5CC,SAETF,EAAAN,UAAAS,SAAA,WAAA,IAAAC,EAAAC,KACEA,KAAKC,WAAaD,KAAKE,OAAOF,KAAKG,MACnCC,YAAY,WACV,IAAMC,EAAQN,EAAKG,SACnBH,EAAKO,cAAgBP,EAAKE,WAAWM,KAAKF,EAAO,QAAU,IAC3DN,EAAKS,eAAiBT,EAAKE,WAAWM,KAAKF,EAAO,SAAW,GAC7DN,EAAKU,iBAAmBV,EAAKE,WAAWM,KAAKF,EAAO,WAAa,GACjEN,EAAKW,iBAAmBX,EAAKE,WAAWM,KAAKF,EAAO,WAAa,GACjEN,EAAKY,YAAYC,KAAKb,EAAKO,eAC3BP,EAAKc,aAAaD,KAAKb,EAAKS,gBAC5BT,EAAKe,eAAeF,KAAKb,EAAKU,kBAC9BV,EAAKgB,eAAeH,KAAKb,EAAKW,kBAC9BX,EAAKiB,aAAejB,EAAKE,WAAWgB,eAAeZ,IAClD,0BAxCNa,EAAAA,UAASzB,KAAA,CAAC,CACT0B,SAAU,gBACVC,SAAA,glIAICC,EAAAA,qBACAA,EAAAA,wBACAA,EAAAA,yBACAA,EAAAA,2BACAA,EAAAA,2BACAA,EAAAA,gCACAA,EAAAA,mCACAA,EAAAA,6BACAA,EAAAA,2BACAC,EAAAA,6BACAA,EAAAA,+BACAA,EAAAA,+BACAA,EAAAA,YAtBH,GCAAC,EAAA,oDAMCC,EAAAA,SAAQ/B,KAAA,CAAC,CACRgC,aAAc,CACZ9B,EACAP,GAEFsC,QAAS,CACPC,EAAAA,cAEFC,QAAS,CACPjC,SAfJ","sourcesContent":["import { Pipe, PipeTransform } from '@angular/core';\r\n\r\n@Pipe({\r\n  name: 'appNumberTransform'\r\n})\r\nexport class NumberTransformPipe implements PipeTransform {\r\n  transform(value: number): string {\r\n    if (value) {\r\n      if (value < 10) {\r\n        return `0${value}`;\r\n      }\r\n      return `${value}`;\r\n    } else {\r\n      return '00';\r\n    }\r\n  }\r\n}\r\n","import { Component, OnInit, Input, Output, EventEmitter } from '@angular/core';\r\n\r\nimport * as moment_ from 'moment';\r\n\r\n@Component({\r\n  selector: 'lib-countdown',\r\n  templateUrl: './countdown.component.html',\r\n  styleUrls: ['./countdown.component.scss']\r\n})\r\nexport class CountDownComponent implements OnInit {\r\n  @Input() date;\r\n  @Input() title = 'The time remaining is:';\r\n  @Input() daysText = 'Days';\r\n  @Input() hoursText = 'Hours';\r\n  @Input() minutesText = 'Minutes';\r\n  @Input() secondsText = 'Seconds';\r\n  @Input() isCustomTemplate = false;\r\n  @Input() cardBackgroundColor = 'seagreen';\r\n  @Input() cardTextColor = 'white';\r\n  @Output() daysChanged: EventEmitter<number> = new EventEmitter<number>();\r\n  @Output() hoursChanged: EventEmitter<number> = new EventEmitter<number>();\r\n  @Output() minutesChanged: EventEmitter<number> = new EventEmitter<number>();\r\n  @Output() secondsChanged: EventEmitter<number> = new EventEmitter<number>();\r\n  finishDate;\r\n  daysRemaining: number;\r\n  hoursRemaining: number;\r\n  minutesRemaining: number;\r\n  secondsRemaining: number;\r\n  isFinishDate: boolean;\r\n  moment = moment_;\r\n\r\n  ngOnInit() {\r\n    this.finishDate = this.moment(this.date);\r\n    setInterval(() => {\r\n      const today = this.moment();\r\n      this.daysRemaining = this.finishDate.diff(today, 'days') % 365;\r\n      this.hoursRemaining = this.finishDate.diff(today, 'hours') % 24;\r\n      this.minutesRemaining = this.finishDate.diff(today, 'minutes') % 60;\r\n      this.secondsRemaining = this.finishDate.diff(today, 'seconds') % 60;\r\n      this.daysChanged.emit(this.daysRemaining);\r\n      this.hoursChanged.emit(this.hoursRemaining);\r\n      this.minutesChanged.emit(this.minutesRemaining);\r\n      this.secondsChanged.emit(this.secondsRemaining);\r\n      this.isFinishDate = this.finishDate.isSameOrBefore(today);\r\n    }, 1000);\r\n  }\r\n}\r\n","import { CommonModule } from '@angular/common';\r\nimport { NgModule } from '@angular/core';\r\n\r\nimport { NumberTransformPipe } from './pipes/number-transform/number-transform.pipe';\r\nimport { CountDownComponent } from './countdown.component';\r\n\r\n@NgModule({\r\n  declarations: [\r\n    CountDownComponent,\r\n    NumberTransformPipe,\r\n  ],\r\n  imports: [\r\n    CommonModule\r\n  ],\r\n  exports: [\r\n    CountDownComponent\r\n  ]\r\n})\r\nexport class CountDownModule { }\r\n"]}